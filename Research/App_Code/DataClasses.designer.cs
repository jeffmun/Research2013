#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="uwac")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttClient(tClient instance);
  partial void UpdatetClient(tClient instance);
  partial void DeletetClient(tClient instance);
  partial void InserttClient_Diagnosi(tClient_Diagnosi instance);
  partial void UpdatetClient_Diagnosi(tClient_Diagnosi instance);
  partial void DeletetClient_Diagnosi(tClient_Diagnosi instance);
  partial void InserttClient_Event(tClient_Event instance);
  partial void UpdatetClient_Event(tClient_Event instance);
  partial void DeletetClient_Event(tClient_Event instance);
  partial void InserttClient_IntakeDoc(tClient_IntakeDoc instance);
  partial void UpdatetClient_IntakeDoc(tClient_IntakeDoc instance);
  partial void DeletetClient_IntakeDoc(tClient_IntakeDoc instance);
  partial void InserttClient_ServiceReq(tClient_ServiceReq instance);
  partial void UpdatetClient_ServiceReq(tClient_ServiceReq instance);
  partial void DeletetClient_ServiceReq(tClient_ServiceReq instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["uwacConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tClient> tClients
	{
		get
		{
			return this.GetTable<tClient>();
		}
	}
	
	public System.Data.Linq.Table<tClient_Diagnosi> tClient_Diagnosis
	{
		get
		{
			return this.GetTable<tClient_Diagnosi>();
		}
	}
	
	public System.Data.Linq.Table<tClient_Event> tClient_Events
	{
		get
		{
			return this.GetTable<tClient_Event>();
		}
	}
	
	public System.Data.Linq.Table<tClient_IntakeDoc> tClient_IntakeDocs
	{
		get
		{
			return this.GetTable<tClient_IntakeDoc>();
		}
	}
	
	public System.Data.Linq.Table<tClient_ServiceReq> tClient_ServiceReqs
	{
		get
		{
			return this.GetTable<tClient_ServiceReq>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_INSERT_Default_Events")]
	public int sp_INSERT_Default_Events([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_INSERT_Default_IntakeDocs")]
	public int sp_INSERT_Default_IntakeDocs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_INSERT_Service_Specific_IntakeDocs")]
	public int sp_INSERT_Service_Specific_IntakeDocs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> clientID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> servicetypeID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID, servicetypeID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetCols")]
	public ISingleResult<spGetColsResult> spGetCols([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string tbl)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tbl);
		return ((ISingleResult<spGetColsResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tClient")]
public partial class tClient : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _clientID;
	
	private System.Nullable<int> _personID;
	
	private string _insurance1;
	
	private string _insurance2;
	
	private string _pcp;
	
	private string _pcp_affiliation;
	
	private string _school_district;
	
	private System.Nullable<int> _intake_staffID;
	
	private System.Nullable<int> _uwacsiteID;
	
	private System.Nullable<System.DateTime> _created;
	
	private string _createdBy;
	
	private System.Nullable<System.DateTime> _updated;
	
	private string _updatedBy;
	
	private EntitySet<tClient_Diagnosi> _tClient_Diagnosis;
	
	private EntitySet<tClient_Event> _tClient_Events;
	
	private EntitySet<tClient_IntakeDoc> _tClient_IntakeDocs;
	
	private EntitySet<tClient_ServiceReq> _tClient_ServiceReqs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclientIDChanging(int value);
    partial void OnclientIDChanged();
    partial void OnpersonIDChanging(System.Nullable<int> value);
    partial void OnpersonIDChanged();
    partial void Oninsurance1Changing(string value);
    partial void Oninsurance1Changed();
    partial void Oninsurance2Changing(string value);
    partial void Oninsurance2Changed();
    partial void OnpcpChanging(string value);
    partial void OnpcpChanged();
    partial void Onpcp_affiliationChanging(string value);
    partial void Onpcp_affiliationChanged();
    partial void Onschool_districtChanging(string value);
    partial void Onschool_districtChanged();
    partial void Onintake_staffIDChanging(System.Nullable<int> value);
    partial void Onintake_staffIDChanged();
    partial void OnuwacsiteIDChanging(System.Nullable<int> value);
    partial void OnuwacsiteIDChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OncreatedByChanging(string value);
    partial void OncreatedByChanged();
    partial void OnupdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    #endregion
	
	public tClient()
	{
		this._tClient_Diagnosis = new EntitySet<tClient_Diagnosi>(new Action<tClient_Diagnosi>(this.attach_tClient_Diagnosis), new Action<tClient_Diagnosi>(this.detach_tClient_Diagnosis));
		this._tClient_Events = new EntitySet<tClient_Event>(new Action<tClient_Event>(this.attach_tClient_Events), new Action<tClient_Event>(this.detach_tClient_Events));
		this._tClient_IntakeDocs = new EntitySet<tClient_IntakeDoc>(new Action<tClient_IntakeDoc>(this.attach_tClient_IntakeDocs), new Action<tClient_IntakeDoc>(this.detach_tClient_IntakeDocs));
		this._tClient_ServiceReqs = new EntitySet<tClient_ServiceReq>(new Action<tClient_ServiceReq>(this.attach_tClient_ServiceReqs), new Action<tClient_ServiceReq>(this.detach_tClient_ServiceReqs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int clientID
	{
		get
		{
			return this._clientID;
		}
		set
		{
			if ((this._clientID != value))
			{
				this.OnclientIDChanging(value);
				this.SendPropertyChanging();
				this._clientID = value;
				this.SendPropertyChanged("clientID");
				this.OnclientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", DbType="Int")]
	public System.Nullable<int> personID
	{
		get
		{
			return this._personID;
		}
		set
		{
			if ((this._personID != value))
			{
				this.OnpersonIDChanging(value);
				this.SendPropertyChanging();
				this._personID = value;
				this.SendPropertyChanged("personID");
				this.OnpersonIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insurance1", DbType="VarChar(100)")]
	public string insurance1
	{
		get
		{
			return this._insurance1;
		}
		set
		{
			if ((this._insurance1 != value))
			{
				this.Oninsurance1Changing(value);
				this.SendPropertyChanging();
				this._insurance1 = value;
				this.SendPropertyChanged("insurance1");
				this.Oninsurance1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insurance2", DbType="VarChar(100)")]
	public string insurance2
	{
		get
		{
			return this._insurance2;
		}
		set
		{
			if ((this._insurance2 != value))
			{
				this.Oninsurance2Changing(value);
				this.SendPropertyChanging();
				this._insurance2 = value;
				this.SendPropertyChanged("insurance2");
				this.Oninsurance2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcp", DbType="VarChar(100)")]
	public string pcp
	{
		get
		{
			return this._pcp;
		}
		set
		{
			if ((this._pcp != value))
			{
				this.OnpcpChanging(value);
				this.SendPropertyChanging();
				this._pcp = value;
				this.SendPropertyChanged("pcp");
				this.OnpcpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcp_affiliation", DbType="VarChar(100)")]
	public string pcp_affiliation
	{
		get
		{
			return this._pcp_affiliation;
		}
		set
		{
			if ((this._pcp_affiliation != value))
			{
				this.Onpcp_affiliationChanging(value);
				this.SendPropertyChanging();
				this._pcp_affiliation = value;
				this.SendPropertyChanged("pcp_affiliation");
				this.Onpcp_affiliationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_district", DbType="VarChar(100)")]
	public string school_district
	{
		get
		{
			return this._school_district;
		}
		set
		{
			if ((this._school_district != value))
			{
				this.Onschool_districtChanging(value);
				this.SendPropertyChanging();
				this._school_district = value;
				this.SendPropertyChanged("school_district");
				this.Onschool_districtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intake_staffID", DbType="Int")]
	public System.Nullable<int> intake_staffID
	{
		get
		{
			return this._intake_staffID;
		}
		set
		{
			if ((this._intake_staffID != value))
			{
				this.Onintake_staffIDChanging(value);
				this.SendPropertyChanging();
				this._intake_staffID = value;
				this.SendPropertyChanged("intake_staffID");
				this.Onintake_staffIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uwacsiteID", DbType="Int")]
	public System.Nullable<int> uwacsiteID
	{
		get
		{
			return this._uwacsiteID;
		}
		set
		{
			if ((this._uwacsiteID != value))
			{
				this.OnuwacsiteIDChanging(value);
				this.SendPropertyChanging();
				this._uwacsiteID = value;
				this.SendPropertyChanged("uwacsiteID");
				this.OnuwacsiteIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> created
	{
		get
		{
			return this._created;
		}
		set
		{
			if ((this._created != value))
			{
				this.OncreatedChanging(value);
				this.SendPropertyChanging();
				this._created = value;
				this.SendPropertyChanged("created");
				this.OncreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdBy", DbType="VarChar(50)")]
	public string createdBy
	{
		get
		{
			return this._createdBy;
		}
		set
		{
			if ((this._createdBy != value))
			{
				this.OncreatedByChanging(value);
				this.SendPropertyChanging();
				this._createdBy = value;
				this.SendPropertyChanged("createdBy");
				this.OncreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> updated
	{
		get
		{
			return this._updated;
		}
		set
		{
			if ((this._updated != value))
			{
				this.OnupdatedChanging(value);
				this.SendPropertyChanging();
				this._updated = value;
				this.SendPropertyChanged("updated");
				this.OnupdatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="VarChar(50)")]
	public string updatedBy
	{
		get
		{
			return this._updatedBy;
		}
		set
		{
			if ((this._updatedBy != value))
			{
				this.OnupdatedByChanging(value);
				this.SendPropertyChanging();
				this._updatedBy = value;
				this.SendPropertyChanged("updatedBy");
				this.OnupdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_Diagnosi", Storage="_tClient_Diagnosis", ThisKey="clientID", OtherKey="clientID")]
	public EntitySet<tClient_Diagnosi> tClient_Diagnosis
	{
		get
		{
			return this._tClient_Diagnosis;
		}
		set
		{
			this._tClient_Diagnosis.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_Event", Storage="_tClient_Events", ThisKey="clientID", OtherKey="clientID")]
	public EntitySet<tClient_Event> tClient_Events
	{
		get
		{
			return this._tClient_Events;
		}
		set
		{
			this._tClient_Events.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_IntakeDoc", Storage="_tClient_IntakeDocs", ThisKey="clientID", OtherKey="clientID")]
	public EntitySet<tClient_IntakeDoc> tClient_IntakeDocs
	{
		get
		{
			return this._tClient_IntakeDocs;
		}
		set
		{
			this._tClient_IntakeDocs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_ServiceReq", Storage="_tClient_ServiceReqs", ThisKey="clientID", OtherKey="clientID")]
	public EntitySet<tClient_ServiceReq> tClient_ServiceReqs
	{
		get
		{
			return this._tClient_ServiceReqs;
		}
		set
		{
			this._tClient_ServiceReqs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tClient_Diagnosis(tClient_Diagnosi entity)
	{
		this.SendPropertyChanging();
		entity.tClient = this;
	}
	
	private void detach_tClient_Diagnosis(tClient_Diagnosi entity)
	{
		this.SendPropertyChanging();
		entity.tClient = null;
	}
	
	private void attach_tClient_Events(tClient_Event entity)
	{
		this.SendPropertyChanging();
		entity.tClient = this;
	}
	
	private void detach_tClient_Events(tClient_Event entity)
	{
		this.SendPropertyChanging();
		entity.tClient = null;
	}
	
	private void attach_tClient_IntakeDocs(tClient_IntakeDoc entity)
	{
		this.SendPropertyChanging();
		entity.tClient = this;
	}
	
	private void detach_tClient_IntakeDocs(tClient_IntakeDoc entity)
	{
		this.SendPropertyChanging();
		entity.tClient = null;
	}
	
	private void attach_tClient_ServiceReqs(tClient_ServiceReq entity)
	{
		this.SendPropertyChanging();
		entity.tClient = this;
	}
	
	private void detach_tClient_ServiceReqs(tClient_ServiceReq entity)
	{
		this.SendPropertyChanging();
		entity.tClient = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tClient_Diagnosis")]
public partial class tClient_Diagnosi : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _clientdiagID;
	
	private System.Nullable<int> _clientID;
	
	private System.Nullable<int> _diagID;
	
	private string _diagBy;
	
	private string _diagPosition;
	
	private string _referralSource;
	
	private string _referralPosition;
	
	private string _notes;
	
	private System.Nullable<System.DateTime> _created;
	
	private string _createdBy;
	
	private System.Nullable<System.DateTime> _updated;
	
	private string _updatedBy;
	
	private EntityRef<tClient> _tClient;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclientdiagIDChanging(int value);
    partial void OnclientdiagIDChanged();
    partial void OnclientIDChanging(System.Nullable<int> value);
    partial void OnclientIDChanged();
    partial void OndiagIDChanging(System.Nullable<int> value);
    partial void OndiagIDChanged();
    partial void OndiagByChanging(string value);
    partial void OndiagByChanged();
    partial void OndiagPositionChanging(string value);
    partial void OndiagPositionChanged();
    partial void OnreferralSourceChanging(string value);
    partial void OnreferralSourceChanged();
    partial void OnreferralPositionChanging(string value);
    partial void OnreferralPositionChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OncreatedByChanging(string value);
    partial void OncreatedByChanged();
    partial void OnupdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    #endregion
	
	public tClient_Diagnosi()
	{
		this._tClient = default(EntityRef<tClient>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientdiagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int clientdiagID
	{
		get
		{
			return this._clientdiagID;
		}
		set
		{
			if ((this._clientdiagID != value))
			{
				this.OnclientdiagIDChanging(value);
				this.SendPropertyChanging();
				this._clientdiagID = value;
				this.SendPropertyChanged("clientdiagID");
				this.OnclientdiagIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientID", DbType="Int")]
	public System.Nullable<int> clientID
	{
		get
		{
			return this._clientID;
		}
		set
		{
			if ((this._clientID != value))
			{
				if (this._tClient.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnclientIDChanging(value);
				this.SendPropertyChanging();
				this._clientID = value;
				this.SendPropertyChanged("clientID");
				this.OnclientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagID", DbType="Int")]
	public System.Nullable<int> diagID
	{
		get
		{
			return this._diagID;
		}
		set
		{
			if ((this._diagID != value))
			{
				this.OndiagIDChanging(value);
				this.SendPropertyChanging();
				this._diagID = value;
				this.SendPropertyChanged("diagID");
				this.OndiagIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagBy", DbType="VarChar(100)")]
	public string diagBy
	{
		get
		{
			return this._diagBy;
		}
		set
		{
			if ((this._diagBy != value))
			{
				this.OndiagByChanging(value);
				this.SendPropertyChanging();
				this._diagBy = value;
				this.SendPropertyChanged("diagBy");
				this.OndiagByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagPosition", DbType="VarChar(100)")]
	public string diagPosition
	{
		get
		{
			return this._diagPosition;
		}
		set
		{
			if ((this._diagPosition != value))
			{
				this.OndiagPositionChanging(value);
				this.SendPropertyChanging();
				this._diagPosition = value;
				this.SendPropertyChanged("diagPosition");
				this.OndiagPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referralSource", DbType="VarChar(100)")]
	public string referralSource
	{
		get
		{
			return this._referralSource;
		}
		set
		{
			if ((this._referralSource != value))
			{
				this.OnreferralSourceChanging(value);
				this.SendPropertyChanging();
				this._referralSource = value;
				this.SendPropertyChanged("referralSource");
				this.OnreferralSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referralPosition", DbType="VarChar(100)")]
	public string referralPosition
	{
		get
		{
			return this._referralPosition;
		}
		set
		{
			if ((this._referralPosition != value))
			{
				this.OnreferralPositionChanging(value);
				this.SendPropertyChanging();
				this._referralPosition = value;
				this.SendPropertyChanged("referralPosition");
				this.OnreferralPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(250)")]
	public string notes
	{
		get
		{
			return this._notes;
		}
		set
		{
			if ((this._notes != value))
			{
				this.OnnotesChanging(value);
				this.SendPropertyChanging();
				this._notes = value;
				this.SendPropertyChanged("notes");
				this.OnnotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
	public System.Nullable<System.DateTime> created
	{
		get
		{
			return this._created;
		}
		set
		{
			if ((this._created != value))
			{
				this.OncreatedChanging(value);
				this.SendPropertyChanging();
				this._created = value;
				this.SendPropertyChanged("created");
				this.OncreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdBy", DbType="VarChar(100)")]
	public string createdBy
	{
		get
		{
			return this._createdBy;
		}
		set
		{
			if ((this._createdBy != value))
			{
				this.OncreatedByChanging(value);
				this.SendPropertyChanging();
				this._createdBy = value;
				this.SendPropertyChanged("createdBy");
				this.OncreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="DateTime")]
	public System.Nullable<System.DateTime> updated
	{
		get
		{
			return this._updated;
		}
		set
		{
			if ((this._updated != value))
			{
				this.OnupdatedChanging(value);
				this.SendPropertyChanging();
				this._updated = value;
				this.SendPropertyChanged("updated");
				this.OnupdatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="VarChar(100)")]
	public string updatedBy
	{
		get
		{
			return this._updatedBy;
		}
		set
		{
			if ((this._updatedBy != value))
			{
				this.OnupdatedByChanging(value);
				this.SendPropertyChanging();
				this._updatedBy = value;
				this.SendPropertyChanged("updatedBy");
				this.OnupdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_Diagnosi", Storage="_tClient", ThisKey="clientID", OtherKey="clientID", IsForeignKey=true, DeleteRule="CASCADE")]
	public tClient tClient
	{
		get
		{
			return this._tClient.Entity;
		}
		set
		{
			tClient previousValue = this._tClient.Entity;
			if (((previousValue != value) 
						|| (this._tClient.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tClient.Entity = null;
					previousValue.tClient_Diagnosis.Remove(this);
				}
				this._tClient.Entity = value;
				if ((value != null))
				{
					value.tClient_Diagnosis.Add(this);
					this._clientID = value.clientID;
				}
				else
				{
					this._clientID = default(Nullable<int>);
				}
				this.SendPropertyChanged("tClient");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tClient_Event")]
public partial class tClient_Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _client_eventID;
	
	private System.Nullable<int> _clientID;
	
	private System.Nullable<int> _eventID;
	
	private System.Nullable<System.DateTime> _eventBeginDate;
	
	private System.Nullable<System.DateTime> _eventCompleteDate;
	
	private System.Nullable<int> _eventstatusID;
	
	private string _eventNotes;
	
	private System.Nullable<System.DateTime> _created;
	
	private string _createdBy;
	
	private System.Nullable<System.DateTime> _updated;
	
	private string _updatedBy;
	
	private EntityRef<tClient> _tClient;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_eventIDChanging(int value);
    partial void Onclient_eventIDChanged();
    partial void OnclientIDChanging(System.Nullable<int> value);
    partial void OnclientIDChanged();
    partial void OneventIDChanging(System.Nullable<int> value);
    partial void OneventIDChanged();
    partial void OneventBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OneventBeginDateChanged();
    partial void OneventCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OneventCompleteDateChanged();
    partial void OneventstatusIDChanging(System.Nullable<int> value);
    partial void OneventstatusIDChanged();
    partial void OneventNotesChanging(string value);
    partial void OneventNotesChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OncreatedByChanging(string value);
    partial void OncreatedByChanged();
    partial void OnupdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    #endregion
	
	public tClient_Event()
	{
		this._tClient = default(EntityRef<tClient>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_eventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int client_eventID
	{
		get
		{
			return this._client_eventID;
		}
		set
		{
			if ((this._client_eventID != value))
			{
				this.Onclient_eventIDChanging(value);
				this.SendPropertyChanging();
				this._client_eventID = value;
				this.SendPropertyChanged("client_eventID");
				this.Onclient_eventIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientID", DbType="Int")]
	public System.Nullable<int> clientID
	{
		get
		{
			return this._clientID;
		}
		set
		{
			if ((this._clientID != value))
			{
				if (this._tClient.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnclientIDChanging(value);
				this.SendPropertyChanging();
				this._clientID = value;
				this.SendPropertyChanged("clientID");
				this.OnclientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventID", DbType="Int")]
	public System.Nullable<int> eventID
	{
		get
		{
			return this._eventID;
		}
		set
		{
			if ((this._eventID != value))
			{
				this.OneventIDChanging(value);
				this.SendPropertyChanging();
				this._eventID = value;
				this.SendPropertyChanged("eventID");
				this.OneventIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventBeginDate", DbType="Date")]
	public System.Nullable<System.DateTime> eventBeginDate
	{
		get
		{
			return this._eventBeginDate;
		}
		set
		{
			if ((this._eventBeginDate != value))
			{
				this.OneventBeginDateChanging(value);
				this.SendPropertyChanging();
				this._eventBeginDate = value;
				this.SendPropertyChanged("eventBeginDate");
				this.OneventBeginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventCompleteDate", DbType="Date")]
	public System.Nullable<System.DateTime> eventCompleteDate
	{
		get
		{
			return this._eventCompleteDate;
		}
		set
		{
			if ((this._eventCompleteDate != value))
			{
				this.OneventCompleteDateChanging(value);
				this.SendPropertyChanging();
				this._eventCompleteDate = value;
				this.SendPropertyChanged("eventCompleteDate");
				this.OneventCompleteDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventstatusID", DbType="Int")]
	public System.Nullable<int> eventstatusID
	{
		get
		{
			return this._eventstatusID;
		}
		set
		{
			if ((this._eventstatusID != value))
			{
				this.OneventstatusIDChanging(value);
				this.SendPropertyChanging();
				this._eventstatusID = value;
				this.SendPropertyChanged("eventstatusID");
				this.OneventstatusIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventNotes", DbType="VarChar(250)")]
	public string eventNotes
	{
		get
		{
			return this._eventNotes;
		}
		set
		{
			if ((this._eventNotes != value))
			{
				this.OneventNotesChanging(value);
				this.SendPropertyChanging();
				this._eventNotes = value;
				this.SendPropertyChanged("eventNotes");
				this.OneventNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
	public System.Nullable<System.DateTime> created
	{
		get
		{
			return this._created;
		}
		set
		{
			if ((this._created != value))
			{
				this.OncreatedChanging(value);
				this.SendPropertyChanging();
				this._created = value;
				this.SendPropertyChanged("created");
				this.OncreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdBy", DbType="VarChar(50)")]
	public string createdBy
	{
		get
		{
			return this._createdBy;
		}
		set
		{
			if ((this._createdBy != value))
			{
				this.OncreatedByChanging(value);
				this.SendPropertyChanging();
				this._createdBy = value;
				this.SendPropertyChanged("createdBy");
				this.OncreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="DateTime")]
	public System.Nullable<System.DateTime> updated
	{
		get
		{
			return this._updated;
		}
		set
		{
			if ((this._updated != value))
			{
				this.OnupdatedChanging(value);
				this.SendPropertyChanging();
				this._updated = value;
				this.SendPropertyChanged("updated");
				this.OnupdatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="VarChar(50)")]
	public string updatedBy
	{
		get
		{
			return this._updatedBy;
		}
		set
		{
			if ((this._updatedBy != value))
			{
				this.OnupdatedByChanging(value);
				this.SendPropertyChanging();
				this._updatedBy = value;
				this.SendPropertyChanged("updatedBy");
				this.OnupdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_Event", Storage="_tClient", ThisKey="clientID", OtherKey="clientID", IsForeignKey=true, DeleteRule="CASCADE")]
	public tClient tClient
	{
		get
		{
			return this._tClient.Entity;
		}
		set
		{
			tClient previousValue = this._tClient.Entity;
			if (((previousValue != value) 
						|| (this._tClient.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tClient.Entity = null;
					previousValue.tClient_Events.Remove(this);
				}
				this._tClient.Entity = value;
				if ((value != null))
				{
					value.tClient_Events.Add(this);
					this._clientID = value.clientID;
				}
				else
				{
					this._clientID = default(Nullable<int>);
				}
				this.SendPropertyChanged("tClient");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tClient_IntakeDoc")]
public partial class tClient_IntakeDoc : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _cl_intakedocID;
	
	private System.Nullable<int> _IntakeDocID;
	
	private System.Nullable<int> _clientID;
	
	private System.Nullable<int> _intakedoc_statusID;
	
	private System.Nullable<System.DateTime> _sentDate;
	
	private System.Nullable<System.DateTime> _returnDate;
	
	private string _notes;
	
	private System.Nullable<System.DateTime> _created;
	
	private string _createdBy;
	
	private System.Nullable<System.DateTime> _updated;
	
	private string _updatedBy;
	
	private EntityRef<tClient> _tClient;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncl_intakedocIDChanging(int value);
    partial void Oncl_intakedocIDChanged();
    partial void OnIntakeDocIDChanging(System.Nullable<int> value);
    partial void OnIntakeDocIDChanged();
    partial void OnclientIDChanging(System.Nullable<int> value);
    partial void OnclientIDChanged();
    partial void Onintakedoc_statusIDChanging(System.Nullable<int> value);
    partial void Onintakedoc_statusIDChanged();
    partial void OnsentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsentDateChanged();
    partial void OnreturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnreturnDateChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OncreatedByChanging(string value);
    partial void OncreatedByChanged();
    partial void OnupdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    #endregion
	
	public tClient_IntakeDoc()
	{
		this._tClient = default(EntityRef<tClient>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cl_intakedocID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int cl_intakedocID
	{
		get
		{
			return this._cl_intakedocID;
		}
		set
		{
			if ((this._cl_intakedocID != value))
			{
				this.Oncl_intakedocIDChanging(value);
				this.SendPropertyChanging();
				this._cl_intakedocID = value;
				this.SendPropertyChanged("cl_intakedocID");
				this.Oncl_intakedocIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntakeDocID", DbType="Int")]
	public System.Nullable<int> IntakeDocID
	{
		get
		{
			return this._IntakeDocID;
		}
		set
		{
			if ((this._IntakeDocID != value))
			{
				this.OnIntakeDocIDChanging(value);
				this.SendPropertyChanging();
				this._IntakeDocID = value;
				this.SendPropertyChanged("IntakeDocID");
				this.OnIntakeDocIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientID", DbType="Int")]
	public System.Nullable<int> clientID
	{
		get
		{
			return this._clientID;
		}
		set
		{
			if ((this._clientID != value))
			{
				if (this._tClient.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnclientIDChanging(value);
				this.SendPropertyChanging();
				this._clientID = value;
				this.SendPropertyChanged("clientID");
				this.OnclientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intakedoc_statusID", DbType="Int")]
	public System.Nullable<int> intakedoc_statusID
	{
		get
		{
			return this._intakedoc_statusID;
		}
		set
		{
			if ((this._intakedoc_statusID != value))
			{
				this.Onintakedoc_statusIDChanging(value);
				this.SendPropertyChanging();
				this._intakedoc_statusID = value;
				this.SendPropertyChanged("intakedoc_statusID");
				this.Onintakedoc_statusIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentDate", DbType="Date")]
	public System.Nullable<System.DateTime> sentDate
	{
		get
		{
			return this._sentDate;
		}
		set
		{
			if ((this._sentDate != value))
			{
				this.OnsentDateChanging(value);
				this.SendPropertyChanging();
				this._sentDate = value;
				this.SendPropertyChanged("sentDate");
				this.OnsentDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnDate", DbType="Date")]
	public System.Nullable<System.DateTime> returnDate
	{
		get
		{
			return this._returnDate;
		}
		set
		{
			if ((this._returnDate != value))
			{
				this.OnreturnDateChanging(value);
				this.SendPropertyChanging();
				this._returnDate = value;
				this.SendPropertyChanged("returnDate");
				this.OnreturnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(250)")]
	public string notes
	{
		get
		{
			return this._notes;
		}
		set
		{
			if ((this._notes != value))
			{
				this.OnnotesChanging(value);
				this.SendPropertyChanging();
				this._notes = value;
				this.SendPropertyChanged("notes");
				this.OnnotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> created
	{
		get
		{
			return this._created;
		}
		set
		{
			if ((this._created != value))
			{
				this.OncreatedChanging(value);
				this.SendPropertyChanging();
				this._created = value;
				this.SendPropertyChanged("created");
				this.OncreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdBy", DbType="VarChar(50)")]
	public string createdBy
	{
		get
		{
			return this._createdBy;
		}
		set
		{
			if ((this._createdBy != value))
			{
				this.OncreatedByChanging(value);
				this.SendPropertyChanging();
				this._createdBy = value;
				this.SendPropertyChanged("createdBy");
				this.OncreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> updated
	{
		get
		{
			return this._updated;
		}
		set
		{
			if ((this._updated != value))
			{
				this.OnupdatedChanging(value);
				this.SendPropertyChanging();
				this._updated = value;
				this.SendPropertyChanged("updated");
				this.OnupdatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="VarChar(50)")]
	public string updatedBy
	{
		get
		{
			return this._updatedBy;
		}
		set
		{
			if ((this._updatedBy != value))
			{
				this.OnupdatedByChanging(value);
				this.SendPropertyChanging();
				this._updatedBy = value;
				this.SendPropertyChanged("updatedBy");
				this.OnupdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_IntakeDoc", Storage="_tClient", ThisKey="clientID", OtherKey="clientID", IsForeignKey=true, DeleteRule="CASCADE")]
	public tClient tClient
	{
		get
		{
			return this._tClient.Entity;
		}
		set
		{
			tClient previousValue = this._tClient.Entity;
			if (((previousValue != value) 
						|| (this._tClient.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tClient.Entity = null;
					previousValue.tClient_IntakeDocs.Remove(this);
				}
				this._tClient.Entity = value;
				if ((value != null))
				{
					value.tClient_IntakeDocs.Add(this);
					this._clientID = value.clientID;
				}
				else
				{
					this._clientID = default(Nullable<int>);
				}
				this.SendPropertyChanged("tClient");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tClient_ServiceReq")]
public partial class tClient_ServiceReq : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _servicereqID;
	
	private System.Nullable<int> _clientID;
	
	private System.Nullable<int> _uwacsiteID;
	
	private System.Nullable<int> _servicetypeID;
	
	private System.Nullable<int> _servreq_statusID;
	
	private System.Nullable<int> _internal;
	
	private System.Nullable<System.DateTime> _created;
	
	private string _createdBy;
	
	private System.Nullable<System.DateTime> _updated;
	
	private string _updatedBy;
	
	private EntityRef<tClient> _tClient;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnservicereqIDChanging(int value);
    partial void OnservicereqIDChanged();
    partial void OnclientIDChanging(System.Nullable<int> value);
    partial void OnclientIDChanged();
    partial void OnuwacsiteIDChanging(System.Nullable<int> value);
    partial void OnuwacsiteIDChanged();
    partial void OnservicetypeIDChanging(System.Nullable<int> value);
    partial void OnservicetypeIDChanged();
    partial void Onservreq_statusIDChanging(System.Nullable<int> value);
    partial void Onservreq_statusIDChanged();
    partial void OninternalChanging(System.Nullable<int> value);
    partial void OninternalChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OncreatedByChanging(string value);
    partial void OncreatedByChanged();
    partial void OnupdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    #endregion
	
	public tClient_ServiceReq()
	{
		this._tClient = default(EntityRef<tClient>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicereqID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int servicereqID
	{
		get
		{
			return this._servicereqID;
		}
		set
		{
			if ((this._servicereqID != value))
			{
				this.OnservicereqIDChanging(value);
				this.SendPropertyChanging();
				this._servicereqID = value;
				this.SendPropertyChanged("servicereqID");
				this.OnservicereqIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientID", DbType="Int")]
	public System.Nullable<int> clientID
	{
		get
		{
			return this._clientID;
		}
		set
		{
			if ((this._clientID != value))
			{
				if (this._tClient.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnclientIDChanging(value);
				this.SendPropertyChanging();
				this._clientID = value;
				this.SendPropertyChanged("clientID");
				this.OnclientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uwacsiteID", DbType="Int")]
	public System.Nullable<int> uwacsiteID
	{
		get
		{
			return this._uwacsiteID;
		}
		set
		{
			if ((this._uwacsiteID != value))
			{
				this.OnuwacsiteIDChanging(value);
				this.SendPropertyChanging();
				this._uwacsiteID = value;
				this.SendPropertyChanged("uwacsiteID");
				this.OnuwacsiteIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicetypeID", DbType="Int")]
	public System.Nullable<int> servicetypeID
	{
		get
		{
			return this._servicetypeID;
		}
		set
		{
			if ((this._servicetypeID != value))
			{
				this.OnservicetypeIDChanging(value);
				this.SendPropertyChanging();
				this._servicetypeID = value;
				this.SendPropertyChanged("servicetypeID");
				this.OnservicetypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servreq_statusID", DbType="Int")]
	public System.Nullable<int> servreq_statusID
	{
		get
		{
			return this._servreq_statusID;
		}
		set
		{
			if ((this._servreq_statusID != value))
			{
				this.Onservreq_statusIDChanging(value);
				this.SendPropertyChanging();
				this._servreq_statusID = value;
				this.SendPropertyChanged("servreq_statusID");
				this.Onservreq_statusIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="internal", Storage="_internal", DbType="Int")]
	public System.Nullable<int> @internal
	{
		get
		{
			return this._internal;
		}
		set
		{
			if ((this._internal != value))
			{
				this.OninternalChanging(value);
				this.SendPropertyChanging();
				this._internal = value;
				this.SendPropertyChanged("@internal");
				this.OninternalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> created
	{
		get
		{
			return this._created;
		}
		set
		{
			if ((this._created != value))
			{
				this.OncreatedChanging(value);
				this.SendPropertyChanging();
				this._created = value;
				this.SendPropertyChanged("created");
				this.OncreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdBy", DbType="VarChar(50)")]
	public string createdBy
	{
		get
		{
			return this._createdBy;
		}
		set
		{
			if ((this._createdBy != value))
			{
				this.OncreatedByChanging(value);
				this.SendPropertyChanging();
				this._createdBy = value;
				this.SendPropertyChanged("createdBy");
				this.OncreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> updated
	{
		get
		{
			return this._updated;
		}
		set
		{
			if ((this._updated != value))
			{
				this.OnupdatedChanging(value);
				this.SendPropertyChanging();
				this._updated = value;
				this.SendPropertyChanged("updated");
				this.OnupdatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="VarChar(50)")]
	public string updatedBy
	{
		get
		{
			return this._updatedBy;
		}
		set
		{
			if ((this._updatedBy != value))
			{
				this.OnupdatedByChanging(value);
				this.SendPropertyChanging();
				this._updatedBy = value;
				this.SendPropertyChanged("updatedBy");
				this.OnupdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tClient_tClient_ServiceReq", Storage="_tClient", ThisKey="clientID", OtherKey="clientID", IsForeignKey=true, DeleteRule="CASCADE")]
	public tClient tClient
	{
		get
		{
			return this._tClient.Entity;
		}
		set
		{
			tClient previousValue = this._tClient.Entity;
			if (((previousValue != value) 
						|| (this._tClient.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tClient.Entity = null;
					previousValue.tClient_ServiceReqs.Remove(this);
				}
				this._tClient.Entity = value;
				if ((value != null))
				{
					value.tClient_ServiceReqs.Add(this);
					this._clientID = value.clientID;
				}
				else
				{
					this._clientID = default(Nullable<int>);
				}
				this.SendPropertyChanged("tClient");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class spGetColsResult
{
	
	private string _column_name;
	
	private string _DATA_TYPE;
	
	private System.Nullable<int> _CHARACTER_MAXIMUM_LENGTH;
	
	public spGetColsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_column_name", DbType="NVarChar(128)")]
	public string column_name
	{
		get
		{
			return this._column_name;
		}
		set
		{
			if ((this._column_name != value))
			{
				this._column_name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_TYPE", DbType="NVarChar(128)")]
	public string DATA_TYPE
	{
		get
		{
			return this._DATA_TYPE;
		}
		set
		{
			if ((this._DATA_TYPE != value))
			{
				this._DATA_TYPE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHARACTER_MAXIMUM_LENGTH", DbType="Int")]
	public System.Nullable<int> CHARACTER_MAXIMUM_LENGTH
	{
		get
		{
			return this._CHARACTER_MAXIMUM_LENGTH;
		}
		set
		{
			if ((this._CHARACTER_MAXIMUM_LENGTH != value))
			{
				this._CHARACTER_MAXIMUM_LENGTH = value;
			}
		}
	}
}
#pragma warning restore 1591
